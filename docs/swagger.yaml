basePath: /
definitions:
  models.PropertySwagger:
    properties:
      description:
        example: Spacious apartment near downtown.
        type: string
      liked_by:
        items:
          type: string
        type: array
      location:
        example: New York
        type: string
      owner_email:
        example: owner@example.com
        type: string
      owner_name:
        example: John Doe
        type: string
      owner_pic:
        example: https://example.com/pic.jpg
        type: string
      pictures:
        items:
          type: string
        type: array
      price:
        example: 2500
        type: number
      thumbnail:
        type: string
      title:
        example: Modern 2BHK Apartment
        type: string
    type: object
  models.UserSwagger:
    properties:
      email:
        example: user@example.com
        type: string
      liked_properties:
        items:
          type: string
        type: array
      location:
        type: string
      name:
        example: Alice Smith
        type: string
      posted_properties:
        items:
          type: string
        type: array
      preferred_location:
        type: string
      profile_pic:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server.
  title: Dwello-api
  version: "1.0"
paths:
  /api/properties:
    post:
      consumes:
      - application/json
      description: Create a property owned by the authenticated user
      parameters:
      - description: Property data
        in: body
        name: property
        required: true
        schema:
          $ref: '#/definitions/models.PropertySwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PropertySwagger'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new property
      tags:
      - Properties
  /api/properties/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a property owned by the authenticated user
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a property
      tags:
      - Properties
    put:
      consumes:
      - application/json
      description: Update a property owned by the authenticated user
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated property data
        in: body
        name: property
        required: true
        schema:
          $ref: '#/definitions/models.PropertySwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing property
      tags:
      - Properties
  /api/properties/{id}/like:
    post:
      consumes:
      - application/json
      description: Add a property to the user's liked list
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Like a property
      tags:
      - Properties
  /api/properties/{id}/unlike:
    post:
      consumes:
      - application/json
      description: Remove a property from the user's liked list
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Unlike a property
      tags:
      - Properties
  /api/properties/homescreen:
    get:
      consumes:
      - application/json
      description: Get properties based on user's preferred location
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PropertySwagger'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get properties for the homescreen
      tags:
      - Properties
  /api/properties/search:
    get:
      consumes:
      - application/json
      description: Search for properties by location, price, etc.
      parameters:
      - description: Location
        in: query
        name: location
        type: string
      - description: Minimum price
        in: query
        name: min_price
        type: string
      - description: Maximum price
        in: query
        name: max_price
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PropertySwagger'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search properties
      tags:
      - Properties
  /api/users/{email}:
    get:
      description: Get a user document based on email address
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserSwagger'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get User by Email
      tags:
      - Users
  /api/users/{email}/liked-properties:
    get:
      description: Get a list of properties the user has liked
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PropertySwagger'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Liked Properties
      tags:
      - Users
  /api/users/{email}/location:
    put:
      consumes:
      - application/json
      description: Update the location field of a user
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      - description: Location JSON
        in: body
        name: location
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update User Location
      tags:
      - Users
  /api/users/{email}/posted-properties:
    get:
      description: Get a list of properties the user has posted
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PropertySwagger'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Posted Properties
      tags:
      - Users
  /api/users/{email}/preferred-location:
    put:
      consumes:
      - application/json
      description: Update the preferred_location field of a user
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      - description: Preferred Location JSON
        in: body
        name: preferred_location
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update Preferred Location
      tags:
      - Users
  /api/users/register:
    post:
      consumes:
      - application/json
      description: Register a new user or return existing user if already registered
      parameters:
      - description: User JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserSwagger'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserSwagger'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register or Login User
      tags:
      - Users
swagger: "2.0"
